"use client"

import { useState } from "react"
import { Wifi, WifiOff } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Card, CardContent } from "@/components/ui/card"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { FullRouteView } from "./full-route-view"
import { MapView } from "./map-view"

// TODO: Replace with your Zod schema types
interface RouteTrackingProps {
  route: any
  onBack: () => void
}

/**
 * RouteTrackingView Component
 *
 * TODO for your implementation:
 * - Replace route interface with your Zod schema
 * - Add real-time route updates using React Query with polling
 * - Implement WebSocket connection for live updates
 * - Add route sharing functionality
 * - Add notifications for arrival times
 * - Add route disruption/delay information
 */
export function RouteTrackingView({ route, onBack }: RouteTrackingProps) {
  const [activeTab, setActiveTab] = useState("full")

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
      <div className="container mx-auto px-3 sm:px-4 py-4 sm:py-6 max-w-4xl">
        {/* Header */}
        <div className="flex flex-col sm:flex-row sm:items-center gap-3 sm:gap-4 mb-4 sm:mb-6">
          <Button variant="outline" onClick={onBack} className="self-start">
            ← Back
          </Button>
          <div className="flex-1">
            <h1 className="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white">Route Tracking</h1>
            <p className="text-sm sm:text-base text-gray-600 dark:text-gray-300">
              {route.destination} • {route.isLive ? "Live Tracking" : "Offline"}
            </p>
          </div>
          <Badge
            variant={route.isLive ? "default" : "secondary"}
            className="text-xs sm:text-sm self-start sm:self-center"
          >
            {route.isLive ? (
              <>
                <Wifi className="w-3 h-3 sm:w-4 sm:h-4 mr-1" /> Live
              </>
            ) : (
              <>
                <WifiOff className="w-3 h-3 sm:w-4 sm:h-4 mr-1" /> Offline
              </>
            )}
          </Badge>
        </div>

        {/* Status Card */}
        <Card className="mb-4 sm:mb-6 shadow-lg">
          <CardContent className="p-4 sm:p-6">
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 sm:gap-6">
              <div className="text-center">
                <div className="text-xl sm:text-2xl font-bold text-blue-600">{route.progress}%</div>
                <div className="text-xs sm:text-sm text-gray-500">Route Complete</div>
              </div>
              <div className="text-center">
                <div className="text-xl sm:text-2xl font-bold text-green-600">{route.eta}</div>
                <div className="text-xs sm:text-sm text-gray-500">Next Stop ETA</div>
              </div>
              <div className="text-center">
                <div className="text-base sm:text-lg font-semibold text-gray-900 dark:text-white">{route.nextStop}</div>
                <div className="text-xs sm:text-sm text-gray-500">Current/Next Stop</div>
              </div>
            </div>
            <Progress value={route.progress} className="mt-4 h-2" />
          </CardContent>
        </Card>

        {/* View Tabs */}
        <Card className="shadow-lg">
          <CardContent className="p-4 sm:p-6">
            <Tabs value={activeTab} onValueChange={setActiveTab}>
              <TabsList className="grid w-full grid-cols-2 h-auto">
                <TabsTrigger
                  value="full"
                  className="flex flex-col sm:flex-row items-center gap-1 sm:gap-2 py-2 px-2 text-xs sm:text-sm"
                >
                  <span>Full Route</span>
                </TabsTrigger>
                <TabsTrigger
                  value="map"
                  className="flex flex-col sm:flex-row items-center gap-1 sm:gap-2 py-2 px-2 text-xs sm:text-sm"
                >
                  <span>Map View</span>
                </TabsTrigger>
              </TabsList>

              <TabsContent value="full" className="mt-4 sm:mt-6">
                <FullRouteView />
              </TabsContent>

              <TabsContent value="map" className="mt-4 sm:mt-6">
                <MapView />
              </TabsContent>
            </Tabs>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
